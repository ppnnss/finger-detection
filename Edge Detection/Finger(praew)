import cv2 as cv
import numpy as np
import matplotlib.pyplot as plt

img = cv.imread('finger1.jpg')
imggray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)

#Removing the background
height, width = img.shape[:2]
mask = np.zeros(img.shape[:2],np.uint8)
bgdModel = np.zeros((1,65),np.float64)
fgdModel = np.zeros((1,65),np.float64)
rect = (111, 5, 396, 420) #(x,y,w,h)
new_mask, fg, bg = cv.grabCut(img,mask,rect,bgdModel,fgdModel,5,cv.GC_INIT_WITH_RECT)
mask2 = np.where((new_mask==2)|(new_mask==0),0,1).astype("uint8")
img1 = img*mask2[:,:,np.newaxis]

# Sharpening
img1 = cv.cvtColor(img1, cv.COLOR_BGR2GRAY)
Lap = np.array([[0,0,-1,0,0],[0,-1,-2,-1,0],[-1,-2,16,-2,-1],[0,-1,-2,-1,0],[0,0,-1,0,0]])
kernel_sharp = np.array([[-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1],[-1,-1,25,-1,-1],[-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1]])
img_Lap = cv.filter2D(img1, -1, Lap)
img_sharp = cv.filter2D(img_Lap, -1, kernel_sharp)

# Canny Operator
threlow = 10
threup = 40
Cannyedge = cv.Canny(img_sharp, threlow, threup)

# Prewitt
Blur = cv.GaussianBlur(img_sharp, (3, 3), 0)
kernelx = np.array([[-1, 0, 1], [-1, 0, 1], [-1, 0, 1]])
kernely = np.array([[-1, -1, -1], [0, 0, 0], [1, 1, 1]])
img_prewittx = cv.filter2D(Blur, -1, kernelx)
img_prewitty = cv.filter2D(Blur, -1, kernely)
Prewitt = img_prewittx + img_prewitty

plt.subplot(2,2,1)
plt.imshow(imggray, cmap = 'gray')
plt.title('Original image')
plt.subplot(2,2,2)
plt.imshow(img_sharp, cmap = 'gray')
plt.title('Sharpened image')
plt.subplot(2,2,3)
plt.imshow(Cannyedge, cmap = 'gray')
plt.title('Canny Edge')
plt.subplot(2,2,4)
plt.imshow(Prewitt, cmap = 'gray')
plt.title('Prewitt Edge')
plt.show()
